\contentsline {chapter}{\numberline {第一章\hspace {0.3em}}C++11 新特性必学}{11}{chapter.1}
\contentsline {section}{\numberline {1.1}右值操作}{11}{section.1.1}
\contentsline {subsection}{\numberline {1.1.1}右值 与 左值}{11}{subsection.1.1.1}
\contentsline {subsection}{\numberline {1.1.2}右值引用}{11}{subsection.1.1.2}
\contentsline {subparagraph}{表示：}{11}{section*.2}
\contentsline {subparagraph}{核心：}{11}{section*.3}
\contentsline {subparagraph}{右值引用绑定的对象}{11}{section*.4}
\contentsline {subparagraph}{生命周期}{12}{section*.5}
\contentsline {subparagraph}{示例}{12}{section*.6}
\contentsline {subsection}{\numberline {1.1.3}Move 语义}{12}{subsection.1.1.3}
\contentsline {subsubsection}{简介}{12}{section*.7}
\contentsline {subsubsection}{使用场景}{14}{section*.8}
\contentsline {subsubsection}{STL使用}{15}{section*.9}
\contentsline {subparagraph}{转移语义}{15}{section*.10}
\contentsline {subparagraph}{新容器}{16}{section*.11}
\contentsline {subsection}{\numberline {1.1.4}完美转发}{17}{subsection.1.1.4}
\contentsline {section}{\numberline {1.2}面向对象改进}{18}{section.1.2}
\contentsline {subsection}{\numberline {1.2.1}override 与 final 标识符}{18}{subsection.1.2.1}
\contentsline {subsection}{\numberline {1.2.2}成员初始化}{19}{subsection.1.2.2}
\contentsline {subsection}{\numberline {1.2.3}Defaulted}{20}{subsection.1.2.3}
\contentsline {subsubsection}{-引入}{20}{section*.12}
\contentsline {subsubsection}{-使用}{21}{section*.13}
\contentsline {subsection}{\numberline {1.2.4}Deleted}{23}{subsection.1.2.4}
\contentsline {subsubsection}{-引入}{23}{section*.14}
\contentsline {subsubsection}{-使用}{24}{section*.15}
\contentsline {subsection}{\numberline {1.2.5}委托构造}{25}{subsection.1.2.5}
\contentsline {section}{\numberline {1.3}类型改进}{26}{section.1.3}
\contentsline {subsection}{\numberline {1.3.1}类型推导}{26}{subsection.1.3.1}
\contentsline {subsubsection}{-auto}{26}{section*.16}
\contentsline {subsubsection}{-decltype}{26}{section*.17}
\contentsline {subsection}{\numberline {1.3.2}类型别名}{26}{subsection.1.3.2}
\contentsline {subsection}{\numberline {1.3.3}nullptr}{27}{subsection.1.3.3}
\contentsline {subsection}{\numberline {1.3.4}constexpr}{27}{subsection.1.3.4}
\contentsline {subsection}{\numberline {1.3.5}R-raw string}{27}{subsection.1.3.5}
\contentsline {subsection}{\numberline {1.3.6}Uniform Initialization}{28}{subsection.1.3.6}
\contentsline {subsection}{\numberline {1.3.7}Initialize List}{28}{subsection.1.3.7}
\contentsline {subsection}{\numberline {1.3.8}Explicit Conversion Operators}{29}{subsection.1.3.8}
\contentsline {subsection}{\numberline {1.3.9}Smart Pointers}{29}{subsection.1.3.9}
\contentsline {subsubsection}{shared\_ptr}{29}{section*.18}
\contentsline {subparagraph}{引用计数实现}{29}{section*.19}
\contentsline {subparagraph}{一般我们使用make\_shared来获得shared\_ptr}{30}{lstlisting.1.-43}
\contentsline {subparagraph}{可以使用一个new表达式返回的指针进行初始化}{30}{lstlisting.1.-44}
\contentsline {subparagraph}{可以通过reset方法重置指向另一个对象,此时原对象的引用计数减一}{30}{lstlisting.1.-45}
\contentsline {subparagraph}{可以定制一个deleter函数，用于在shared\_ptr释放对象时调用}{30}{lstlisting.1.-46}
\contentsline {subsubsection}{unique\_ptr}{30}{section*.24}
\contentsline {subparagraph}{作为参数和返回值的唯一方式}{31}{section*.25}
\contentsline {subsubsection}{weak\_ptr}{31}{section*.26}
\contentsline {section}{\numberline {1.4}处理方式(函数)改进}{32}{section.1.4}
\contentsline {subsection}{\numberline {1.4.1}匿名函数(也叫Lambda表达式)}{32}{subsection.1.4.1}
\contentsline {subparagraph}{类型1：[ ](parameters)\{body\}}{32}{section*.27}
\contentsline {subparagraph}{类型2：[ ](int x, int y) -> int \{ int z = x + y; return z; \}}{32}{section*.28}
\contentsline {subparagraph}{类型3: 闭包操作}{32}{section*.29}
\contentsline {subsection}{\numberline {1.4.2}for的变革}{33}{subsection.1.4.2}
\contentsline {subsection}{\numberline {1.4.3}非成员 begin() 和 end()}{33}{subsection.1.4.3}
\contentsline {subsection}{\numberline {1.4.4}静态断言}{34}{subsection.1.4.4}
\contentsline {section}{\numberline {1.5}参考}{35}{section.1.5}
\contentsline {chapter}{\numberline {第二章\hspace {0.3em}}return 语句}{37}{chapter.2}
\contentsline {section}{\numberline {2.1}传值返回}{37}{section.2.1}
\contentsline {section}{\numberline {2.2}引用返回}{37}{section.2.2}
\contentsline {subsubsection}{例子}{37}{section*.30}
\contentsline {chapter}{\numberline {第三章\hspace {0.3em}}inline 关键字}{39}{chapter.3}
\contentsline {section}{\numberline {3.1}使用}{39}{section.3.1}
\contentsline {subsubsection}{在函数定义中函数返回类型前加上关键字inline,注：声明不起作用}{39}{section*.31}
\contentsline {subsubsection}{定义在类声明之中的成员函数将自动地成为内联函数}{39}{section*.32}
\contentsline {section}{\numberline {3.2}效率}{39}{section.3.2}
\contentsline {subsection}{\numberline {3.2.1}实现机制}{39}{subsection.3.2.1}
\contentsline {subsection}{\numberline {3.2.2}慎用内敛}{40}{subsection.3.2.2}
\contentsline {section}{\numberline {3.3}内联技巧}{40}{section.3.3}
\contentsline {subsection}{\numberline {3.3.1}条件内联}{40}{subsection.3.3.1}
\contentsline {subsection}{\numberline {3.3.2}选择性内联}{40}{subsection.3.3.2}
\contentsline {section}{\numberline {3.4}结论}{41}{section.3.4}
\contentsline {chapter}{\numberline {第四章\hspace {0.3em}}重载}{43}{chapter.4}
\contentsline {section}{\numberline {4.1}函数重载}{43}{section.4.1}
\contentsline {section}{\numberline {4.2}函数重载后的隐藏规则}{43}{section.4.2}
\contentsline {section}{\numberline {4.3}运算符重载}{44}{section.4.3}
\contentsline {subsection}{\numberline {4.3.1}重载 = 运算符}{44}{subsection.4.3.1}
\contentsline {subsection}{\numberline {4.3.2}重载 'output' 运算符}{44}{subsection.4.3.2}
\contentsline {subsection}{\numberline {4.3.3}重载 New Delete 运算符}{44}{subsection.4.3.3}
\contentsline {subsection}{\numberline {4.3.4}重载 ++ 运算符}{44}{subsection.4.3.4}
\contentsline {section}{\numberline {4.4}函数的默认参数}{44}{section.4.4}
\contentsline {chapter}{\numberline {第五章\hspace {0.3em}}struct And union}{47}{chapter.5}
\contentsline {section}{\numberline {5.1}Struct}{47}{section.5.1}
\contentsline {subsection}{\numberline {5.1.1}定义}{47}{subsection.5.1.1}
\contentsline {subsection}{\numberline {5.1.2}函数使用}{47}{subsection.5.1.2}
\contentsline {subsubsection}{传值}{47}{section*.33}
\contentsline {subparagraph}{1. 使用引用改变}{47}{section*.34}
\contentsline {subparagraph}{2. 使用指针改变}{48}{section*.35}
\contentsline {subsubsection}{初始化}{48}{section*.36}
\contentsline {section}{\numberline {5.2}Union}{48}{section.5.2}
\contentsline {subsection}{\numberline {5.2.1}定义}{48}{subsection.5.2.1}
\contentsline {section}{\numberline {5.3}字节对齐-StructAndUnion}{49}{section.5.3}
\contentsline {chapter}{\numberline {第六章\hspace {0.3em}}string}{51}{chapter.6}
\contentsline {section}{\numberline {6.1}方法}{51}{section.6.1}
\contentsline {subsection}{\numberline {6.1.1}string类的构造函数}{51}{subsection.6.1.1}
\contentsline {subsection}{\numberline {6.1.2}string类的字符操作}{52}{subsection.6.1.2}
\contentsline {section}{\numberline {6.2}操作符}{53}{section.6.2}
\contentsline {subsection}{\numberline {6.2.1}+= 操作符}{53}{subsection.6.2.1}
\contentsline {subsection}{\numberline {6.2.2}+ 操作符}{53}{subsection.6.2.2}
\contentsline {subsection}{\numberline {6.2.3}== 操作符}{53}{subsection.6.2.3}
\contentsline {section}{\numberline {6.3}宽字符 wchar\_t}{53}{section.6.3}
\contentsline {chapter}{\numberline {第七章\hspace {0.3em}}class}{55}{chapter.7}
\contentsline {section}{\numberline {7.1}C++ 中使用Struct 创建1个类}{55}{section.7.1}
\contentsline {section}{\numberline {7.2}C++ 中使用Class 创建1个类}{55}{section.7.2}
\contentsline {section}{\numberline {7.3}const 型成员函数}{55}{section.7.3}
\contentsline {section}{\numberline {7.4}析构函数与构造函数}{55}{section.7.4}
\contentsline {subsection}{\numberline {7.4.1}潜规则}{55}{subsection.7.4.1}
\contentsline {subsection}{\numberline {7.4.2}Initializer-List Constructors}{56}{subsection.7.4.2}
\contentsline {subsection}{\numberline {7.4.3}初始化顺序}{57}{subsection.7.4.3}
\contentsline {section}{\numberline {7.5}值语义与对象语义}{57}{section.7.5}
\contentsline {subsection}{\numberline {7.5.1}值语义}{57}{subsection.7.5.1}
\contentsline {subsection}{\numberline {7.5.2}对象语义}{57}{subsection.7.5.2}
\contentsline {section}{\numberline {7.6}拷贝构造函数}{57}{section.7.6}
\contentsline {subparagraph}{浅拷贝与深拷贝}{58}{section*.37}
\contentsline {subparagraph}{拷贝构造函数可能的错误}{58}{section*.38}
\contentsline {section}{\numberline {7.7}初始化列表}{58}{section.7.7}
\contentsline {section}{\numberline {7.8}一些只有}{58}{section.7.8}
\contentsline {section}{\numberline {7.9}STATIC 修饰词}{59}{section.7.9}
\contentsline {subsection}{\numberline {7.9.1}初始化时间}{59}{subsection.7.9.1}
\contentsline {subsection}{\numberline {7.9.2}静态全局变量}{59}{subsection.7.9.2}
\contentsline {subsection}{\numberline {7.9.3}静态局部变量}{60}{subsection.7.9.3}
\contentsline {subsection}{\numberline {7.9.4}静态函数}{60}{subsection.7.9.4}
\contentsline {subsection}{\numberline {7.9.5}静态数据成员}{60}{subsection.7.9.5}
\contentsline {subsection}{\numberline {7.9.6}静态成员函数}{60}{subsection.7.9.6}
\contentsline {chapter}{\numberline {第八章\hspace {0.3em}}this}{63}{chapter.8}
\contentsline {section}{\numberline {8.1}概念}{63}{section.8.1}
\contentsline {section}{\numberline {8.2}注意问题}{63}{section.8.2}
\contentsline {chapter}{\numberline {第九章\hspace {0.3em}}继承}{65}{chapter.9}
\contentsline {section}{\numberline {9.1}潜规则}{65}{section.9.1}
\contentsline {section}{\numberline {9.2}构造函数调用顺序}{67}{section.9.2}
\contentsline {section}{\numberline {9.3}继承方式}{67}{section.9.3}
\contentsline {subsection}{\numberline {9.3.1}继承后对父类资源的访问权限}{67}{subsection.9.3.1}
\contentsline {subsection}{\numberline {9.3.2}继承约束}{67}{subsection.9.3.2}
\contentsline {subsubsection}{禁止继承-final}{67}{section*.39}
\contentsline {subsection}{\numberline {9.3.3}重写 父类方法}{67}{subsection.9.3.3}
\contentsline {subsection}{\numberline {9.3.4}切片}{68}{subsection.9.3.4}
\contentsline {subparagraph}{Casting Up and Down}{69}{section*.40}
\contentsline {subsection}{\numberline {9.3.5}使用 父类方法}{69}{subsection.9.3.5}
\contentsline {section}{\numberline {9.4}支持多继承}{69}{section.9.4}
\contentsline {section}{\numberline {9.5}虚基类}{69}{section.9.5}
\contentsline {section}{\numberline {9.6}C++接口的实现方式}{72}{section.9.6}
\contentsline {subsection}{\numberline {9.6.1}纯虚函数}{72}{subsection.9.6.1}
\contentsline {subsection}{\numberline {9.6.2}抽象类}{72}{subsection.9.6.2}
\contentsline {subsection}{\numberline {9.6.3}C++ 接口与抽象类的区别}{72}{subsection.9.6.3}
\contentsline {chapter}{\numberline {第十章\hspace {0.3em}}virtual 关键字}{73}{chapter.10}
\contentsline {section}{\numberline {10.1}多态}{73}{section.10.1}
\contentsline {subparagraph}{编译器绑定-非多态}{73}{section*.41}
\contentsline {subparagraph}{运行期绑定-多态}{73}{section*.42}
\contentsline {subparagraph}{C++中多态有以下三个前提条件}{73}{section*.43}
\contentsline {subparagraph}{*析构函数为什么要是 virtual的}{73}{section*.44}
\contentsline {subparagraph}{占用空间问题}{73}{section*.45}
\contentsline {section}{\numberline {10.2}虚函数表}{74}{section.10.2}
\contentsline {subparagraph}{vtbl}{74}{section*.46}
\contentsline {subparagraph}{vptr}{74}{section*.47}
\contentsline {subsection}{\numberline {10.2.1}一般继承（无虚函数覆盖）}{76}{subsection.10.2.1}
\contentsline {subsection}{\numberline {10.2.2}一般继承（有虚函数覆盖）}{77}{subsection.10.2.2}
\contentsline {chapter}{\numberline {第十一章\hspace {0.3em}}C++ 内存结构}{79}{chapter.11}
\contentsline {section}{\numberline {11.1}进程结构}{79}{section.11.1}
\contentsline {subsection}{\numberline {11.1.1}Stack 栈}{79}{subsection.11.1.1}
\contentsline {subsection}{\numberline {11.1.2}Heap 堆}{79}{subsection.11.1.2}
\contentsline {subsection}{\numberline {11.1.3}.bss 未初始化全局与静态变量}{80}{subsection.11.1.3}
\contentsline {subsection}{\numberline {11.1.4}.data 初始化的全局与静态变量}{80}{subsection.11.1.4}
\contentsline {subsection}{\numberline {11.1.5}.text 代码区}{80}{subsection.11.1.5}
\contentsline {section}{\numberline {11.2}对象结构}{80}{section.11.2}
\contentsline {subsection}{\numberline {11.2.1}虚函数在内存中分布}{80}{subsection.11.2.1}
\contentsline {subsection}{\numberline {11.2.2}单一对象}{81}{subsection.11.2.2}
\contentsline {subsection}{\numberline {11.2.3}单一对象(virtual)}{82}{subsection.11.2.3}
\contentsline {subsection}{\numberline {11.2.4}单继承(base 无virtual)}{83}{subsection.11.2.4}
\contentsline {subsection}{\numberline {11.2.5}单继承(base 有virtual)}{84}{subsection.11.2.5}
\contentsline {subsection}{\numberline {11.2.6}虚继承-单继承(virtual)}{85}{subsection.11.2.6}
\contentsline {subsection}{\numberline {11.2.7}多继承(base 有 virtual)}{86}{subsection.11.2.7}
\contentsline {subparagraph}{菱形继承}{88}{section*.48}
\contentsline {subsection}{\numberline {11.2.8}虚继承-多继承(base 有 virtual)}{89}{subsection.11.2.8}
\contentsline {subparagraph}{Derived类图}{89}{section*.49}
\contentsline {subparagraph}{DerivedDerived 类图}{90}{section*.50}
\contentsline {subparagraph}{总结}{90}{section*.51}
\contentsline {section}{\numberline {11.3}ELF}{91}{section.11.3}
\contentsline {chapter}{\numberline {第十二章\hspace {0.3em}}extern 关键字}{93}{chapter.12}
\contentsline {section}{\numberline {12.1}基本解释}{93}{section.12.1}
\contentsline {section}{\numberline {12.2}问题}{93}{section.12.2}
\contentsline {subsubsection}{作用范围-可见性的关键字}{93}{section*.52}
\contentsline {subparagraph}{extern 变量}{93}{section*.53}
\contentsline {subsubsection}{连接申明linkage declaration}{93}{section*.54}
\contentsline {subparagraph}{extern"C"}{93}{section*.55}
\contentsline {subparagraph}{extern 函数声明}{94}{section*.56}
\contentsline {chapter}{\numberline {第十三章\hspace {0.3em}}volatile 关键字}{95}{chapter.13}
\contentsline {section}{\numberline {13.1}含义}{95}{section.13.1}
\contentsline {section}{\numberline {13.2}示例}{95}{section.13.2}
\contentsline {paragraph}{声明时语法}{95}{section*.57}
\contentsline {paragraph}{volatile变量 调用过程}{95}{section*.58}
\contentsline {section}{\numberline {13.3}volatile 指针}{97}{section.13.3}
\contentsline {section}{\numberline {13.4}多线程下的 volatile}{97}{section.13.4}
\contentsline {subparagraph}{在一个线程中}{97}{section*.59}
\contentsline {subparagraph}{在另外一个线程中}{97}{section*.60}
\contentsline {section}{\numberline {13.5}参考}{98}{section.13.5}
\contentsline {chapter}{\numberline {第十四章\hspace {0.3em}}explicit 关键字}{99}{chapter.14}
\contentsline {section}{\numberline {14.1}作用}{99}{section.14.1}
\contentsline {subparagraph}{示例}{99}{section*.61}
\contentsline {chapter}{\numberline {第十五章\hspace {0.3em}}friend 关键字}{101}{chapter.15}
\contentsline {section}{\numberline {15.1}目的}{101}{section.15.1}
\contentsline {section}{\numberline {15.2}友元函数}{101}{section.15.2}
\contentsline {section}{\numberline {15.3}友元类}{102}{section.15.3}
\contentsline {subparagraph}{例子}{102}{section*.62}
\contentsline {chapter}{\numberline {第十六章\hspace {0.3em}}mutable 关键字}{105}{chapter.16}
\contentsline {section}{\numberline {16.1}目的}{105}{section.16.1}
\contentsline {section}{\numberline {16.2}示例}{105}{section.16.2}
\contentsline {chapter}{\numberline {第十七章\hspace {0.3em}}类型转换}{107}{chapter.17}
\contentsline {section}{\numberline {17.1}static\_cast}{107}{section.17.1}
\contentsline {section}{\numberline {17.2}const\_cast}{107}{section.17.2}
\contentsline {section}{\numberline {17.3}dynamic\_cast}{107}{section.17.3}
\contentsline {section}{\numberline {17.4}reinterpret\_cast}{108}{section.17.4}
\contentsline {chapter}{\numberline {第十八章\hspace {0.3em}}static\_assert 关键字}{111}{chapter.18}
\contentsline {section}{\numberline {18.1}简介}{111}{section.18.1}
\contentsline {section}{\numberline {18.2}说明}{111}{section.18.2}
\contentsline {section}{\numberline {18.3}范例}{111}{section.18.3}
\contentsline {section}{\numberline {18.4}参考}{112}{section.18.4}
\contentsline {chapter}{\numberline {第十九章\hspace {0.3em}}命名空间}{113}{chapter.19}
\contentsline {section}{\numberline {19.1}namespace 别名}{113}{section.19.1}
\contentsline {section}{\numberline {19.2}namespace 扩充}{113}{section.19.2}
\contentsline {subparagraph}{例子}{113}{section*.63}
\contentsline {chapter}{\numberline {第二十章\hspace {0.3em}}引用}{115}{chapter.20}
\contentsline {section}{\numberline {20.1}引用 创建时 必须初始化}{115}{section.20.1}
\contentsline {section}{\numberline {20.2}引用不能重定义}{115}{section.20.2}
\contentsline {section}{\numberline {20.3}函数中的引用}{115}{section.20.3}
\contentsline {subparagraph}{例子3.1}{116}{section*.64}
\contentsline {section}{\numberline {20.4}引用 右值}{116}{section.20.4}
\contentsline {subparagraph}{参考网址}{116}{section*.65}
\contentsline {subparagraph}{右值引用的声明期限}{116}{section*.66}
\contentsline {subparagraph}{类型不确定性}{117}{section*.67}
\contentsline {subparagraph}{完美转发}{117}{section*.68}
\contentsline {chapter}{\numberline {第二十一章\hspace {0.3em}}enum 的使用}{119}{chapter.21}
\contentsline {section}{\numberline {21.1}定义}{119}{section.21.1}
\contentsline {section}{\numberline {21.2}使用}{119}{section.21.2}
\contentsline {subsection}{\numberline {21.2.1}类外函数}{119}{subsection.21.2.1}
\contentsline {subsection}{\numberline {21.2.2}类中}{119}{subsection.21.2.2}
\contentsline {section}{\numberline {21.3}注意事项}{120}{section.21.3}
\contentsline {chapter}{\numberline {第二十二章\hspace {0.3em}}模版}{121}{chapter.22}
\contentsline {chapter}{\numberline {第二十三章\hspace {0.3em}}异常}{123}{chapter.23}
\contentsline {chapter}{\numberline {第二十四章\hspace {0.3em}}编译}{125}{chapter.24}
\contentsline {section}{\numberline {24.1}Windows-VisualStudio}{125}{section.24.1}
\contentsline {subsection}{\numberline {24.1.1}配置全局VC++目录}{125}{subsection.24.1.1}
\contentsline {subsection}{\numberline {24.1.2}配置第三方程序库-以opencv 示例}{125}{subsection.24.1.2}
\contentsline {subsubsection}{下载配置所需}{125}{section*.69}
\contentsline {subparagraph}{1.VisualStudio2010}{125}{section*.70}
\contentsline {subparagraph}{2.OpenCV2.4.8}{125}{section*.71}
\contentsline {subsubsection}{安装}{125}{section*.72}
\contentsline {subparagraph}{1.安装位置不影响}{125}{section*.73}
\contentsline {subparagraph}{2.配置Path系统环境}{125}{section*.74}
\contentsline {subsubsection}{配置}{125}{section*.75}
\contentsline {subparagraph}{1.Create Project}{125}{section*.76}
\contentsline {subparagraph}{2.配置}{126}{section*.77}
\contentsline {subsubsection}{编程测试}{126}{section*.78}
\contentsline {subsection}{\numberline {24.1.3}dll 与 lib 的配置}{126}{subsection.24.1.3}
\contentsline {subparagraph}{静态lib}{126}{section*.79}
\contentsline {subparagraph}{动态lib}{126}{section*.80}
\contentsline {subsection}{\numberline {24.1.4}常见错误}{126}{subsection.24.1.4}
\contentsline {subsubsection}{}{126}{section*.81}
\contentsline {subparagraph}{参考}{126}{section*.82}
\contentsline {section}{\numberline {24.2}Linux - Makefile}{126}{section.24.2}
\contentsline {subsection}{\numberline {24.2.1}Makefile 规则}{127}{subsection.24.2.1}
\contentsline {subsubsection}{示例}{127}{section*.83}
\contentsline {subsection}{\numberline {24.2.2}make 执行流程}{127}{subsection.24.2.2}
\contentsline {subsection}{\numberline {24.2.3}makefile 中使用变量}{128}{subsection.24.2.3}
\contentsline {subsection}{\numberline {24.2.4}make 的自动推倒}{128}{subsection.24.2.4}
\contentsline {subparagraph}{进一步自动化}{128}{section*.84}
\contentsline {subsection}{\numberline {24.2.5}添加依赖库}{129}{subsection.24.2.5}
\contentsline {subsection}{\numberline {24.2.6}代码泄漏检测}{129}{subsection.24.2.6}
\contentsline {subsection}{\numberline {24.2.7}参考文献}{129}{subsection.24.2.7}
\contentsline {chapter}{\numberline {第二十五章\hspace {0.3em}}调试}{131}{chapter.25}
\contentsline {section}{\numberline {25.1}Linux - 调试 GDB}{131}{section.25.1}
\contentsline {subsection}{\numberline {25.1.1}使用 GDB}{131}{subsection.25.1.1}
\contentsline {paragraph}{-g 编译项目}{131}{section*.85}
\contentsline {paragraph}{启动 GDB}{131}{section*.86}
\contentsline {paragraph}{GDB 常用 命令}{131}{section*.87}
\contentsline {subparagraph}{基础 命令}{131}{section*.88}
\contentsline {subparagraph}{Help 命令}{132}{section*.89}
\contentsline {subsection}{\numberline {25.1.2}参考}{133}{subsection.25.1.2}
\contentsline {chapter}{\numberline {第二十六章\hspace {0.3em}}工程-细节}{135}{chapter.26}
\contentsline {section}{\numberline {26.1}语言使用基本问题}{135}{section.26.1}
\contentsline {subsection}{\numberline {26.1.1}注释格式}{135}{subsection.26.1.1}
\contentsline {subsubsection}{函数注释}{135}{section*.90}
\contentsline {subsubsection}{代码注释}{135}{section*.91}
\contentsline {subsection}{\numberline {26.1.2}预编译}{136}{subsection.26.1.2}
\contentsline {subsection}{\numberline {26.1.3}变量问题}{137}{subsection.26.1.3}
\contentsline {subsubsection}{变量(包括成员)命名}{137}{section*.92}
\contentsline {subsubsection}{使用}{137}{section*.93}
\contentsline {subsection}{\numberline {26.1.4}运算符使用问题}{137}{subsection.26.1.4}
\contentsline {subsection}{\numberline {26.1.5}函数问题}{137}{subsection.26.1.5}
\contentsline {subsection}{\numberline {26.1.6}条件语句问题}{137}{subsection.26.1.6}
\contentsline {subsection}{\numberline {26.1.7}循环语句问题}{138}{subsection.26.1.7}
\contentsline {subsection}{\numberline {26.1.8}数值类型转换问题}{138}{subsection.26.1.8}
\contentsline {section}{\numberline {26.2}内存管理}{138}{section.26.2}
\contentsline {subsection}{\numberline {26.2.1}内存分配与使用}{138}{subsection.26.2.1}
\contentsline {subsection}{\numberline {26.2.2}内存泄漏}{138}{subsection.26.2.2}
\contentsline {section}{\numberline {26.3}缓冲区溢出}{138}{section.26.3}
\contentsline {subsection}{\numberline {26.3.1}数组越界}{138}{subsection.26.3.1}
\contentsline {subsection}{\numberline {26.3.2}数据越界}{138}{subsection.26.3.2}
\contentsline {subsection}{\numberline {26.3.3}字符串操作溢出}{138}{subsection.26.3.3}
\contentsline {section}{\numberline {26.4}指针问题}{138}{section.26.4}
\contentsline {subsection}{\numberline {26.4.1}定义问题}{138}{subsection.26.4.1}
\contentsline {subsection}{\numberline {26.4.2}空指针解引用}{139}{subsection.26.4.2}
\contentsline {subsection}{\numberline {26.4.3}指针非法使用}{139}{subsection.26.4.3}
\contentsline {subsection}{\numberline {26.4.4}数组参数}{139}{subsection.26.4.4}
\contentsline {section}{\numberline {26.5}安全缺陷}{139}{section.26.5}
\contentsline {subsection}{\numberline {26.5.1}外部输入安全缺陷}{139}{subsection.26.5.1}
\contentsline {subsection}{\numberline {26.5.2}资源泄漏}{139}{subsection.26.5.2}
\contentsline {subsection}{\numberline {26.5.3}其他}{139}{subsection.26.5.3}
\contentsline {section}{\numberline {26.6}类}{139}{section.26.6}
\contentsline {subsection}{\numberline {26.6.1}类命名问题}{139}{subsection.26.6.1}
\contentsline {subsection}{\numberline {26.6.2}访问权限}{140}{subsection.26.6.2}
\contentsline {subsection}{\numberline {26.6.3}区分对象所在处}{140}{subsection.26.6.3}
\contentsline {subsubsection}{Object on the Stack}{140}{section*.94}
\contentsline {subsubsection}{Object on the Heap}{140}{section*.95}
\contentsline {section}{\numberline {26.7}其他}{140}{section.26.7}
\contentsline {subsection}{\numberline {26.7.1}预处理}{140}{subsection.26.7.1}
\contentsline {subsection}{\numberline {26.7.2}异常}{140}{subsection.26.7.2}
\contentsline {subsection}{\numberline {26.7.3}多线程和同步性}{141}{subsection.26.7.3}
\contentsline {subsection}{\numberline {26.7.4}代码不可达}{141}{subsection.26.7.4}
\contentsline {subsection}{\numberline {26.7.5}关于VS2013中的相对路径问题}{141}{subsection.26.7.5}
\contentsline {subsection}{\numberline {26.7.6}编译}{141}{subsection.26.7.6}
