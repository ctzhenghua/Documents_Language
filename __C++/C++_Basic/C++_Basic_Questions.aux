\relax 
\@writefile{toc}{\contentsline {paragraph}{1.面向对象包含哪些基本概念？}{1}}
\@writefile{toc}{\contentsline {paragraph}{2.面向对象的基本特征包括哪些？}{1}}
\@writefile{toc}{\contentsline {paragraph}{3.为什么封装对面向对象来说很重要？}{1}}
\@writefile{toc}{\contentsline {paragraph}{4.接口与实现的分离有什么好处？}{1}}
\@writefile{toc}{\contentsline {paragraph}{5.抽象是什么？}{1}}
\@writefile{toc}{\contentsline {paragraph}{6.封装与抽象有什么联系？}{1}}
\@writefile{toc}{\contentsline {paragraph}{7.继承是否会消弱封装机制？}{1}}
\@writefile{toc}{\contentsline {paragraph}{8.组合是怎么定义的，它有什么作用，它包括什么？}{1}}
\@writefile{toc}{\contentsline {paragraph}{9.如何理解动态特性？}{1}}
\@writefile{toc}{\contentsline {paragraph}{1.如何理解对象的初始化？}{1}}
\@writefile{toc}{\contentsline {paragraph}{2.如何理解对象的生存周期？}{1}}
\@writefile{toc}{\contentsline {paragraph}{3.如何向函数传递对象？}{1}}
\@writefile{toc}{\contentsline {paragraph}{4.编写C++ 类时需要注意哪些问题？}{1}}
\@writefile{toc}{\contentsline {paragraph}{5.如何理解构造函数？}{1}}
\@writefile{toc}{\contentsline {paragraph}{6.默认构造函数是什么，它有什么特点？}{1}}
\@writefile{toc}{\contentsline {paragraph}{7.何时调用拷贝构造函数？}{1}}
\@writefile{toc}{\contentsline {paragraph}{8.深拷贝和浅拷贝的区别是什么？}{1}}
\@writefile{toc}{\contentsline {paragraph}{9.如何理解析构函数？}{1}}
\@writefile{toc}{\contentsline {paragraph}{10.程序如何处理静态成员变量及静态成员函数？}{2}}
\@writefile{toc}{\contentsline {paragraph}{11.为什么使用友元，如何使用？}{2}}
\@writefile{toc}{\contentsline {paragraph}{12.使用友元的优点}{2}}
\@writefile{toc}{\contentsline {paragraph}{1.C++ 的继承结构是怎样的？}{2}}
\@writefile{toc}{\contentsline {paragraph}{2.当派生类与基类成员名称冲突时应如何解决？}{2}}
\@writefile{toc}{\contentsline {paragraph}{3.为什么要使用虚基类？}{2}}
\@writefile{toc}{\contentsline {paragraph}{4.继承体系中构造函数的调用顺序是怎样的？}{2}}
\@writefile{toc}{\contentsline {paragraph}{5.类的默认访问权限是什么？为什么使用它作为默认权限？}{2}}
\@writefile{toc}{\contentsline {paragraph}{6.为什么要使用Protected，如何使用？}{2}}
\@writefile{toc}{\contentsline {paragraph}{7.为什么派生类不能访问基类的private成员？}{2}}
\@writefile{toc}{\contentsline {paragraph}{8.struct 与 class 有什么不同？}{2}}
\@writefile{toc}{\contentsline {paragraph}{9.如何为基类构造函数传递参数？}{2}}
\@writefile{toc}{\contentsline {paragraph}{1.如何理解C++中的捆绑？}{2}}
\@writefile{toc}{\contentsline {paragraph}{2.如何理解和使用虚函数？}{2}}
\@writefile{toc}{\contentsline {paragraph}{3.如何理解和使用纯虚函数？}{2}}
\@writefile{toc}{\contentsline {paragraph}{4.如何理解和使用抽象类？}{2}}
\@writefile{toc}{\contentsline {paragraph}{5.多态是如何实现的？}{2}}
\@writefile{toc}{\contentsline {paragraph}{6.如何理解静态多态和动态多态？}{2}}
\@writefile{toc}{\contentsline {paragraph}{7.如何理解虚函数和构造函数？}{2}}
\@writefile{toc}{\contentsline {paragraph}{8.如何理解虚函数和析构函数？}{2}}
\@writefile{toc}{\contentsline {paragraph}{1.如何理解sizeof关键字？}{2}}
\@writefile{toc}{\contentsline {paragraph}{2.指针是什么？}{2}}
\@writefile{toc}{\contentsline {paragraph}{3.如何理解地址和指针的关系？}{3}}
\@writefile{toc}{\contentsline {paragraph}{4.指针和取值操作符\&如何结合使用？}{3}}
\@writefile{toc}{\contentsline {paragraph}{5.指针的运算有哪些？}{3}}
\@writefile{toc}{\contentsline {paragraph}{6.指针变量和引用有什么区别？}{3}}
\@writefile{toc}{\contentsline {paragraph}{7.指针变量与变量指针有什么区别？}{3}}
\@writefile{toc}{\contentsline {paragraph}{8.指针的比较指的是什么？}{3}}
\@writefile{toc}{\contentsline {paragraph}{9.如何使用函数指针？}{3}}
\@writefile{toc}{\contentsline {paragraph}{10.如何理解指针函数？}{3}}
\@writefile{toc}{\contentsline {paragraph}{11.如何理解指针数组与数组指针？}{3}}
\@writefile{toc}{\contentsline {paragraph}{12.使用指针有哪些常见的错误？}{3}}
\@writefile{toc}{\contentsline {paragraph}{13.常用的字符串操作函数有哪些？}{3}}
\@writefile{toc}{\contentsline {paragraph}{14.如何理解字符数组和字符指针？}{3}}
\@writefile{toc}{\contentsline {paragraph}{1.为什么使用运算符重载？}{3}}
\@writefile{toc}{\contentsline {paragraph}{2.使用运算符重载应遵循哪些规则？}{3}}
\@writefile{toc}{\contentsline {paragraph}{3.哪些运算符可以重载，哪些可以重载？}{3}}
\@writefile{toc}{\contentsline {paragraph}{4.为什么要使用友元函数重载运算符？}{3}}
\@writefile{toc}{\contentsline {paragraph}{5.使用友元函数重载“++”“--”运算符可能会出现什么问题？}{3}}
\@writefile{toc}{\contentsline {paragraph}{6.如何实现new 和 delete 运算符的重载？}{3}}
\@writefile{toc}{\contentsline {paragraph}{7.如何重载数组下标运算符？}{3}}
\@writefile{toc}{\contentsline {paragraph}{8.如何将运算符函数作为成员函数使用？}{3}}
\@writefile{toc}{\contentsline {paragraph}{9.成员运算符函数与友元运算符函数有什么区别？}{3}}
\@writefile{toc}{\contentsline {paragraph}{1.什么事枚举，如何使用枚举？}{3}}
\@writefile{toc}{\contentsline {paragraph}{1.C++预定义的类型转换有哪些方式？}{4}}
\@writefile{toc}{\contentsline {paragraph}{2.如何实现类这种数据类型与其他数据类型的装换？}{4}}
\@writefile{toc}{\contentsline {paragraph}{3.为什么需要转换函数，如何创建转换函数？}{4}}
\@writefile{toc}{\contentsline {paragraph}{4.c++定义了哪几个强制转换操作符？作用分别是什么？}{4}}
\@writefile{toc}{\contentsline {paragraph}{5.如何区分静态类型检查和动态类型检查？}{4}}
\@writefile{toc}{\contentsline {paragraph}{6.为什么要避免使用动态类型检查？}{4}}
\@writefile{toc}{\contentsline {paragraph}{7.什么事运行时类型标识？}{4}}
\@writefile{toc}{\contentsline {paragraph}{8.为什么向下的类型转换是危险的？}{4}}
\@writefile{toc}{\contentsline {paragraph}{9.dynamic\_cast$\delimiter "426830A T \delimiter "526930B $()函数的作用是什么？}{4}}
\@writefile{toc}{\contentsline {paragraph}{10.static\_cast$\delimiter "426830A T \delimiter "526930B $()函数的作用是什么？}{4}}
\@writefile{toc}{\contentsline {paragraph}{11.typeid()的作用是什么？}{4}}
\@writefile{toc}{\contentsline {paragraph}{1.C++ 异常处理的原理是什么？}{4}}
\@writefile{toc}{\contentsline {paragraph}{2.异常处理是如何实现的？}{4}}
\@writefile{toc}{\contentsline {paragraph}{3.使用异常时应该注意哪些方面？}{4}}
\@writefile{toc}{\contentsline {paragraph}{4.抛出的异常和捕获的异常是否必须匹配？}{4}}
\@writefile{toc}{\contentsline {paragraph}{5.如何处理Try语句中函数抛出的异常？}{4}}
\@writefile{toc}{\contentsline {paragraph}{6.程序在何时执行catch语句？}{4}}
\@writefile{toc}{\contentsline {paragraph}{7.一个try语句是否可以使用多个catch语句？如何使用？}{4}}
\@writefile{toc}{\contentsline {paragraph}{8.对异常使用省略号有什么作用？}{4}}
\@writefile{toc}{\contentsline {paragraph}{9.throw 语句具有什么作用？}{4}}
\@writefile{toc}{\contentsline {paragraph}{10.如何实现重新抛出异常？}{4}}
\@writefile{toc}{\contentsline {paragraph}{11.构造和析构对象时产生的异常应该如何处理？}{4}}
\@writefile{toc}{\contentsline {paragraph}{12.如何使用默认函数参数避免异常和错误发生？}{4}}
\@writefile{toc}{\contentsline {paragraph}{13.处理异常时terminate() 函数和 unexpected()函数分别有什么作用？}{5}}
\@writefile{toc}{\contentsline {paragraph}{1.什么是标准模版库？为什么要使用标准模板库？}{5}}
\@writefile{toc}{\contentsline {paragraph}{2.标准模版库包含哪些头文件？}{5}}
\@writefile{toc}{\contentsline {paragraph}{3.如何理解容器？}{5}}
\@writefile{toc}{\contentsline {paragraph}{4.标准模版库中容器的存储方式和访问方式}{5}}
\@writefile{toc}{\contentsline {paragraph}{5.标准模版库中的容器是如何实现的？}{5}}
\@writefile{toc}{\contentsline {paragraph}{6.关联容器是如何工作的？}{5}}
\@writefile{toc}{\contentsline {paragraph}{7.迭代器在标准模版库设计中有什么作用？}{5}}
\@writefile{toc}{\contentsline {paragraph}{8.如何理解输入输出迭代器？}{5}}
\@writefile{toc}{\contentsline {paragraph}{9.STL 包括哪些算法？}{5}}
\@writefile{toc}{\contentsline {paragraph}{10.vector,list,deque,set,map的内部实现和使用}{5}}
\@writefile{toc}{\contentsline {paragraph}{1.如何理解模版？}{5}}
\@writefile{toc}{\contentsline {paragraph}{2.如何显式重载通用函数？}{5}}
\@writefile{toc}{\contentsline {paragraph}{3.什么情况下不能使用通用函数代替重载函数？}{5}}
\@writefile{toc}{\contentsline {paragraph}{4.多个文件之间是否可以编译相同的函数模版定义？}{5}}
\@writefile{toc}{\contentsline {paragraph}{5.类模板和模板类之间有什么关系？}{5}}
\@writefile{toc}{\contentsline {paragraph}{6.当函数模版与同名非函数模版函数重载时如何进行调用？}{5}}
\@writefile{toc}{\contentsline {paragraph}{7.如何使用模版定义通用类？}{5}}
\@writefile{toc}{\contentsline {paragraph}{8.是否可以创建含有多个通用数据类型的通用类？}{5}}
\@writefile{toc}{\contentsline {paragraph}{9.创建含有参数的操作符需要注意什么？}{5}}
\@writefile{toc}{\contentsline {paragraph}{10.在函数模版中如何使用数组作为参数？}{5}}
\@writefile{toc}{\contentsline {paragraph}{1.}{5}}
\@writefile{toc}{\contentsline {paragraph}{2.}{6}}
\@writefile{toc}{\contentsline {paragraph}{3.}{6}}
\@writefile{toc}{\contentsline {paragraph}{4.}{6}}
\@writefile{toc}{\contentsline {paragraph}{5.}{6}}
\@writefile{toc}{\contentsline {paragraph}{6.}{6}}
\@writefile{toc}{\contentsline {paragraph}{7.}{6}}
\@writefile{toc}{\contentsline {paragraph}{8.}{6}}
\@writefile{toc}{\contentsline {paragraph}{1.}{6}}
\@writefile{toc}{\contentsline {paragraph}{2.}{6}}
\@writefile{toc}{\contentsline {paragraph}{3.}{6}}
\@writefile{toc}{\contentsline {paragraph}{4.}{6}}
\@writefile{toc}{\contentsline {paragraph}{5.}{6}}
\@writefile{toc}{\contentsline {paragraph}{6.}{6}}
\@writefile{toc}{\contentsline {paragraph}{7.}{6}}
\@writefile{toc}{\contentsline {paragraph}{8.}{6}}
\@writefile{toc}{\contentsline {paragraph}{1.}{6}}
\@writefile{toc}{\contentsline {paragraph}{2.}{6}}
\@writefile{toc}{\contentsline {paragraph}{3.}{6}}
\@writefile{toc}{\contentsline {paragraph}{4.}{6}}
\@writefile{toc}{\contentsline {paragraph}{5.}{6}}
\@writefile{toc}{\contentsline {paragraph}{6.}{6}}
\@writefile{toc}{\contentsline {paragraph}{7.}{6}}
\@writefile{toc}{\contentsline {paragraph}{8.}{6}}
\@writefile{toc}{\contentsline {paragraph}{1.}{7}}
\@writefile{toc}{\contentsline {paragraph}{2.}{7}}
\@writefile{toc}{\contentsline {paragraph}{3.}{7}}
\@writefile{toc}{\contentsline {paragraph}{4.}{7}}
\@writefile{toc}{\contentsline {paragraph}{5.}{7}}
\@writefile{toc}{\contentsline {paragraph}{6.}{7}}
\@writefile{toc}{\contentsline {paragraph}{7.}{7}}
\@writefile{toc}{\contentsline {paragraph}{8.}{7}}
